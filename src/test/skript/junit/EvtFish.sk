test "EvtFishJUnit" when running JUnit:
	set {_tests::1} to "cast - correct player"
	set {_tests::2} to "cast - correct fish"
	set {_tests::3} to "cast - not in open water"
	set {_tests::4} to "cast - correct fish hooked"
	set {_tests::5} to "cast - set waiting time"
	set {_tests::6} to "cast - add waiting time"
	set {_tests::7} to "cast - remove waiting time"
	set {_tests::8} to "cast - reset waiting time"
	set {_tests::9} to "cast - set approach angle"
	set {_tests::10} to "cast - add approach angle"
	set {_tests::11} to "cast - remove approach angle"
	set {_tests::12} to "cast - reset approach angle"
	set {_tests::13} to "cast - sky access"
	set {_tests::14} to "cast - rain"
	set {_tests::15} to "cast - bite time"
	set {_tests::16} to "cast - remove bite time"
	set {_tests::17} to "cast - add bite time"

	set {_tests::18} to "catch - correct player"
	set {_tests::19} to "catch - correct fish"
	set {_tests::20} to "catch - not in open water"
	set {_tests::21} to "catch - correct fish hooked"
	set {_tests::22} to "catch - set waiting time"
	set {_tests::23} to "catch - add waiting time"
	set {_tests::24} to "catch - remove waiting time"
	set {_tests::25} to "catch - reset waiting time"
	set {_tests::26} to "catch - set approach angle"
	set {_tests::27} to "catch - add approach angle"
	set {_tests::28} to "catch - remove approach angle"
	set {_tests::29} to "catch - reset approach angle"
	set {_tests::30} to "catch - sky access"
	set {_tests::31} to "catch - rain"
	set {_tests::32} to "catch - bite time"
	set {_tests::33} to "catch - remove bite time"
	set {_tests::34} to "catch - add bite time"

	ensure junit test "org.skriptlang.skript.test.tests.syntaxes.events.EvtFishTest" completes {_tests::*}

on fishing line cast:
	set {_test} to "org.skriptlang.skript.test.tests.syntaxes.events.EvtFishTest"
	junit test is {_test}

	if player's name is "Efnilite":
		complete objective "cast - correct player" for {_test}

	if event-entity is a cod:
		complete objective "cast - correct fish" for {_test}

	if fishing hook is not in open water:
		complete objective "cast - not in open water" for {_test}

	if hooked entity is a cod:
		complete objective "cast - correct fish hooked" for {_test}

	set max fish waiting time to 20 seconds
	if max fish waiting time is 20 seconds:
		complete objective "cast - set waiting time" for {_test}

	add 1 second to min fish waiting time
	if min fish waiting time is 6 seconds:
		complete objective "cast - add waiting time" for {_test}

	remove 1 second from max fish waiting time
	if max fish waiting time is 19 seconds:
		complete objective "cast - remove waiting time" for {_test}

	reset min fish waiting time
	reset max fish waiting time
	if:
		min fish waiting time is 5 seconds
		max fish waiting time is 30 seconds
	then:
		complete objective "cast - reset waiting time" for {_test}

	set max fish approach angle to 40
	if max fish approach angle is 40:
		complete objective "cast - set approach angle" for {_test}

	add 10 to min fish approach angle
	if min fish approach angle is 10:
		complete objective "cast - add approach angle" for {_test}

	remove 10 from min fish approach angle
	if min fish approach angle is 0:
		complete objective "cast - remove approach angle" for {_test}

	reset max fish approach angle
	reset min fish approach angle
	if:
		min fish approach angle is 0
		max fish approach angle is 360
	then:
		complete objective "cast - reset approach angle" for {_test}

	if fishing hook is influenced by sky access:
		complete objective "cast - sky access" for {_test}

	if fishing hook is not influenced by rain:
		complete objective "cast - rain" for {_test}

	set fishing bite time to 1 second
	if fishing bite time is 1 second:
		complete objective "cast - bite time" for {_test}

	remove 0.5 seconds from fishing bite time
	if fishing bite time is 0.5 seconds:
		complete objective "cast - remove bite time" for {_test}

	add 0.5 seconds to fishing bite time
	if fishing bite time is 1 second:
		complete objective "cast - add bite time" for {_test}

on fish catch:
	set {_test} to "org.skriptlang.skript.test.tests.syntaxes.events.EvtFishTest"
	junit test is {_test}

	if player's name is "Efnilite":
		complete objective "catch - correct player" for {_test}

	if event-entity is a salmon:
		complete objective "catch - correct fish" for {_test}

	if fishing hook is not in open water:
		complete objective "catch - not in open water" for {_test}

	if hooked entity is a salmon:
		complete objective "catch - correct fish hooked" for {_test}

	set max fish waiting time to 20 seconds
	if max fish waiting time is 20 seconds:
		complete objective "catch - set waiting time" for {_test}

	add 1 second to min fish waiting time
	if min fish waiting time is 6 seconds:
		complete objective "catch - add waiting time" for {_test}

	remove 1 second from max fish waiting time
	if max fish waiting time is 19 seconds:
		complete objective "catch - remove waiting time" for {_test}

	reset min fish waiting time
	reset max fish waiting time
	if:
		min fish waiting time is 5 seconds
		max fish waiting time is 30 seconds
	then:
		complete objective "catch - reset waiting time" for {_test}

	set max fish approach angle to 40
	if max fish approach angle is 40:
		complete objective "catch - set approach angle" for {_test}

	add 10 to min fish approach angle
	if min fish approach angle is 10:
		complete objective "catch - add approach angle" for {_test}

	remove 10 from min fish approach angle
	if min fish approach angle is 0:
		complete objective "catch - remove approach angle" for {_test}

	reset min fish approach angle
	reset max fish approach angle
	if:
		min fish approach angle is 0
		max fish approach angle is 360
	then:
		complete objective "catch - reset approach angle" for {_test}

	if fishing hook is influenced by sky access:
		complete objective "catch - sky access" for {_test}

	if fishing hook is not influenced by rain:
		complete objective "catch - rain" for {_test}

	set fishing bite time to 1 second
	if fishing bite time is 1 second:
		complete objective "catch - bite time" for {_test}

	remove 0.5 seconds from fishing bite time
	if fishing bite time is 0.5 seconds:
		complete objective "catch - remove bite time" for {_test}

	add 0.5 seconds to fishing bite time
	if fishing bite time is 1 second:
		complete objective "catch - add bite time" for {_test}
