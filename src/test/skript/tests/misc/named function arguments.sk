local function nfa(a: int, b: int, c: int) :: int:
	return {_a} + {_b} - {_c}

local function nfa(a: string, b: string) :: int:
	return 3

test "named function arguments":
	assert nfa(8, 2, 3) = 7

	assert nfa(a: 8, 2, 3) = 7
	assert nfa(a: 8, b: 2, 3) = 7
	assert nfa(a: 8, b: 2, c: 3) = 7

	assert nfa(c: 3, a: 8, b: 2) = 7
	assert nfa(c: 3, b: 2, a: 8) = 7
	assert nfa(a: 8, c: 3, b: 2) = 7

	assert nfa(a: 8, b: 2, 3) = 7
	assert nfa(8, b: 2, c: 3) = 7

	set {_x} to 8
	assert nfa(a: {_x}, b: 2, 3) = 7

	parse:
		assert nfa(a: 8, c: adghadhaherta, b: 2) = 7
	assert first element of last parse logs contains "The function nfa(a: integer, c: ?, b: integer) does not exist"

	parse:
		assert nfa(8, c: 3, b: 2) = 7
	assert first element of last parse logs contains "Mixing named and unnamed arguments is not allowed"

	parse:
		assert nfa(c: 3, 2, a: 8) = 7
	assert first element of last parse logs contains "Mixing named and unnamed arguments is not allowed"

	parse:
		assert nfa(c: 3, a: 8, 2) = 7
	assert first element of last parse logs contains "Mixing named and unnamed arguments is not allowed"

	parse:
		assert nfa(b: 2, 3, a: 8) = 7
	assert first element of last parse logs contains "Mixing named and unnamed arguments is not allowed"

	assert nfa("gonna be, gonna be, ""'golden'""", "fire %{_, }%") = 3

	parse:
		nfa(a: 1, b: 2, d: 2)
	assert first element of last parse logs contains "The function nfa(a: integer, b: integer, d: integer) does not exist"

	parse:
		nfa(a: 1, d: 2, b: 2)
	assert first element of last parse logs contains "The function nfa(a: integer, d: integer, b: integer) does not exist"

	parse:
		nfa(a: 1, a: 2, c: 2)
	assert first element of last parse logs contains "A value has already been assigned to parameter a"

local function nfa_incorrect_list(ns: numbers):
	stop

test "named function arguments with single list params":
	parse:
		nfa_incorrect_list(ns: (1, 2, 3))
	assert last parse logs are not set

	parse:
		nfa_incorrect_list(ns: 1, n: 2, 3)
	assert first element of last parse logs contains "The function nfa_incorrect_list(ns: integer, n: integer, integer) does not exist"

	parse:
		nfa_incorrect_list(wrong: (1, 2, 3))
	assert first element of last parse logs contains "The function nfa_incorrect_list(wrong: integers) does not exist"

	parse:
		nfa_incorrect_list(ns: (1, (2, 3)))
	assert first element of last parse logs contains "The function nfa_incorrect_list(ns: integers) does not exist"

	parse:
		nfa_incorrect_list(ns: 1, 2, 3)
	assert first element of last parse logs contains "The function nfa_incorrect_list(ns: integer, integer, integer) does not exist"

	parse:
		nfa_incorrect_list(ns: 1, ns: 2, ns: 3)
	assert first element of last parse logs contains "A value has already been assigned to parameter ns."
