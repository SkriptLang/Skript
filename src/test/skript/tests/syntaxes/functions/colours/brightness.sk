test "colour brightness":

	set {_redBrightness-100} to colourBrightness(red, -100)
	set {_redBrightness-10} to colourBrightness(red, -10)
	set {_redBrightness10} to colourBrightness(red, 10)
	set {_redBrightness100} to colourBrightness(red, 100)
	set {_redBrightnessInfinity} to colourBrightness(red, infinity value)
	set {_redBrightnessNan} to colourBrightness(red, nan value)

	assert hex code of {_redBrightness-100} is "#000000" with "hex code of red brightened by -100 was incorrect"
	assert hex code of {_redBrightness-10} is "#9E2922" with "hex code of red brightened by -10 was incorrect"
	assert hex code of {_redBrightness10} is "#C2332A" with "hex code of red brightened by 10 was incorrect"
	assert hex code of {_redBrightness100} is "#FF4337" with "hex code of red brightened by 100 was incorrect"
	assert hex code of {_redBrightnessInfinity} is "#B03028" with "adjusting the brightness of a colour by infinity should clamp between -100 and 100"
	assert hex code of {_redBrightnessNan} is "#B03028" with "adjusting the brightness of a colour by nan should clamp between -100 and 100"

	assert colourBrightness({_x}) is not set with "adjusting the brightness an invalid type shouldn't return anything"
