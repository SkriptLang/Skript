test "explosive yield":
	spawn a primed tnt at test-location
	assert explosive yield of last spawned tnt is 4 with "explosive yield of tnt is 4 by default"
	set explosive yield of last spawned tnt to 10
	assert explosive yield of last spawned tnt is 10 with "an explosive's explosive yield should be 10 if it is set to 10"
	delete last spawned primed tnt

test "creeper explosive yield":
	spawn a creeper at test-location
	assert explosive yield of last spawned creeper is 3 with "explosive yield of a creeper is 3 by default"
	set explosive yield of last spawned creeper to 10
	assert explosive yield of last spawned creeper is 10 with "a creeper's explosive yield should be 10 if it is set to 10"
	delete last spawned creeper

test "ghast explosive power":
	spawn a ghast at test-location:
		set {_entity} to entity
	set the explosive yield of {_entity} to 10
	assert the explosive yield of {_entity} is 10 with "Explosive yield of ghast was not set to 10"
	remove 20 from the explosive yield of {_entity}
	assert the explosive yield of {_entity} is 0 with "Explosive yield of ghast should be capped at 0 minimum"
	add 100 to the explosive yield of {_entity}
	assert the explosive yield of {_entity} is 100 with "Explosive yield of ghast should have had 100 added"
	clear the explosive yield of {_entity}
	assert the explosive yield of {_entity} is 0 with "Explosive yield of ghast was not cleared"
	set the explosive yield of {_entity} to nan value
	assert the explosive yield of {_entity} is 0 with "Explosive yield of ghast should have no effect of nan value"
	set the explosive yield of {_entity} to infinity value
	assert the explosive yield of {_entity} is 127 with "Explosive yield of ghast should be capped at 127 (max)"
	set the explosive yield of {_entity} to -100000
	assert the explosive yield of {_entity} is 0 with "Explosive yield of ghast should be capped at 0 (min)"
	clear entity within {_entity}
