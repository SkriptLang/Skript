local function esf(x: int):: int:
	return 1

#local function esf(x: string):: int:
#	return 2

#local function esf(x: objects):: int:
#	return 3

local function esf_two(x: int, y: int):: int:
	return 4

local function esf_void(x: int):
	stop

test "function section":
	set {_x} to function esf with arguments:
		x set to 1
	assert {_x} = 1

	#set {_x} to function esf with arguments:
	#	x set to "hey"
	#assert {_x} = 2

	#set {_x} to function esf with arguments:
	#	x set to 1 and 2
	#assert {_x} = 3

	#set {_x} to function esf with arguments:
	#	x set to 1, 2, 3, {_a}, {_b::*}
	#assert {_x} = 3

	#parse:
	#	set {_x} to function esf with arguments:
	#		x set to {_y}
	#assert first element of last parse logs is set

	set {_y} to 3
	set {_x} to function esf with arguments:
		x set to {_y}
	assert {_x} = 1

	parse:
		set {_x} to function esf with arguments:
			x set to firework
	assert first element of last parse logs contains "The function esf(x: item type) does not exist"

	parse:
		set {_x} to function esf with arguments:
			x set to agadsfg
	assert first element of last parse logs contains "The function esf(x: ?) does not exist"

	set {_x} to function esf_two with arguments:
		x set to 1
		y set to 2
	assert {_x} = 4

	set {_x} to function esf_two with arguments:
		y set to 2
		x set to 1
	assert {_x} = 4

	parse:
		set {_x} to function esf_void with arguments:
			x set to 1
	assert first element of last parse logs contains "The function esf_void does not return anything"
