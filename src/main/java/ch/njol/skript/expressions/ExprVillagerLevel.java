/**
 *   This file is part of Skript.
 *
 *  Skript is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Skript is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Skript.  If not, see <http://www.gnu.org/licenses/>.
 *
 *
 * Copyright 2011-2017 Peter GÃ¼ttinger and contributors
 */
package ch.njol.skript.expressions;

import org.bukkit.entity.LivingEntity;
import org.bukkit.entity.Villager;
import org.bukkit.event.Event;
import org.eclipse.jdt.annotation.Nullable;

import ch.njol.skript.Skript;
import ch.njol.skript.classes.Changer.ChangeMode;
import ch.njol.skript.doc.Description;
import ch.njol.skript.doc.Examples;
import ch.njol.skript.doc.Name;
import ch.njol.skript.doc.RequiredPlugins;
import ch.njol.skript.doc.Since;
import ch.njol.skript.expressions.base.SimplePropertyExpression;
import ch.njol.util.Math2;
import ch.njol.util.coll.CollectionUtils;

@Name("Villager Level")
@Description("Represents the current level of this villager's profession. Influences the trading options generated by the villager. " +
	"If it is greater than their profession's maximum level, no new offers are generated. Increments when the villager fills his trading xp bar. " +
	"Also used for badge rendering. A level must be between 1 and 5, Skript will adjust when too high/low. Villagers with a level of 2 or greater " +
	"will keep their profession regardless if they have a work site or not. If this level is 1 and the villager has no worksite, they may lose their profession.")
@Examples({"set {_a} to villager level of last spawned villager",
	"set villager level of target entity to 3",
	"add 1 to villager level of last spawned villager",
	"remove 1 from villager level of target entity",
	"reset villager level of last spawned villager"})
@RequiredPlugins("Minecraft 1.14+")
@Since("INSERT VERSION")
public class ExprVillagerLevel extends SimplePropertyExpression<LivingEntity, Number> {
	
	static {
		if (Skript.methodExists(Villager.class, "getVillagerLevel"))
			register(ExprVillagerLevel.class, Number.class, "villager level", "livingentities");
	}
	
	@Nullable
	@Override
	public Number convert(LivingEntity villager) {
		if (villager instanceof Villager)
			return ((Villager) villager).getVillagerLevel();
		return null;
	}
	
	@Nullable
	@Override
	public Class<?>[] acceptChange(ChangeMode mode) {
		switch (mode) {
			case SET:
			case ADD:
			case REMOVE:
			case RESET:
				return CollectionUtils.array(Number.class);
			default:
				return null;
		}
	}
	
	@Override
	public void change(Event e, @Nullable Object[] delta, ChangeMode mode) {
		int level = delta == null ? 1 : ((Number) delta[0]).intValue();
		boolean change = false;
		switch (mode) {
			case ADD:
				change = true;
				break;
			case REMOVE:
				change = true;
				level = -level;
				break;
			case RESET:
				level = 1;
				break;
		}
		for (LivingEntity entity : getExpr().getArray(e)) {
			if (entity instanceof Villager) {
				Villager villager = ((Villager) entity);
				int newLevel = change ? villager.getVillagerLevel() + level : level;
				villager.setVillagerLevel(Math2.fit(1, newLevel, 5));
			}
		}
	}
	
	@Override
	public Class<? extends Number> getReturnType() {
		return Number.class;
	}
	
	@Override
	protected String getPropertyName() {
		return "villager level";
	}
	
}
